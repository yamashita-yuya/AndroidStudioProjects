181023

ブロードキャストについて全然データが出てこない
ブロードキャスト自体は広くアンドロイド端末自体にインテントをするための仕組みらしいけど
そもそもインテントって何だ
	アンドロイドアプリケーション開発における3大コアコンポーネント
	・アクティビティ
	・サービス
	・ブロードキャストレシーバー
	上記はメッセージによってアクティベートされる
	そのメッセージがインテント
	インテントはアプリケーションの主要コンポーネントの実行時にレイトバインディングを実現する仕組み
		例とバインディングってなんだ
		レイトバインディングとアーリーバインディングがある
		遅延バインディングと事前バインディング
		ダイナミックスリンクと、スタティックリンク
		遅延バインディングとは、実行時にバインディングが行われること
		プログラムの実行時、オブジェクトが名前で参照されるタイミングでメソッドが呼び出される処理
		事前バインディングとは、コンパイル時にバインディングが行われる処理
		コンパイル時にすべての変数やメソッドが確定され、実行時に呼び出される
		ソース上でメソッドの変更などがあった際に、事前バインディングでは、コンパイル時にエラーが発生するが、遅延バインディングではコンパイル時にエラーが発生しない。
		遅延バインディングでは実行時にエラートなる
		バインディングって何だ
			バインディングとはAとBを紐付ける、というような処理
			例えばSQL文に変数を埋め込むこと
			その時の変数Xをバインド変数という
			キーバイントとか
			ウィキペディアによると
			より正確には名前束縛NameBindingというらしい
			サブライムテキストで透明度→マック向けはすくに見つからない
			名前束縛は名前結合とも言う
			値を識別子に対応付けることを意味する
			識別子とは、変数や関数などを識別する、プログラム中のトークンとして表される。
			変数名や、関数名。
			トークンとはソースコード上の文字列で意味を持つ最小単位のこと
			トークンは変数名、関数名に加えてイフなどのキーワード、カッコや演算子の一つ一つのこと
			以上を踏まえた上で名前束縛とは、値を変数名や関数名に紐付けることである。
			値とは、何らかの式を評価した結果である。
			結果は基本的にはビット列になる。ただし、値にはデータ型があるので、データ型が異なれば同じビット列でも、整数や浮動少数、文字れてうとして解釈されうる。
			コンピューター自体には識別子という概念は存在しないため、機械語レベルでは束縛は存在しない。
			名前束縛は、プログラミング言語による抽象化の一種である。
			上記を踏まえて改めて名前束縛とは、ビット列である値を、プログラミング言語としてわかりやすく識別子にまとめるという行為である。
		上記を踏まえて動的束縛もしくは遅延束縛の例としては、C＋＋の仮想関数呼び出しがある。
		ポリモーフィズムによっては、実行する前にオブジェクトの識別子を決定することができないため、実行すべき関数は動的に束縛される。
	上記を踏まえてインテントとは、アプリケーション内のコンポーネントレベルでの例とバインディングをする仕組み
	たぶん、マニフェストファイルっでアクティビティの宣言をしていることがコンポーネントのバインディングと言えると思う。
	それをある動作の実行時に行う仕組みとしてインテントがあると解釈した。
	そのような宣言は、マニフェストファイル内でいうと、インテントフィルターで行うことが出来る。
	で、ある動作の際になどにインテント（メッセージ）付きでコンポーネントをアクティベートする処理を行うと、それのメッセージにあったコンポーネントをアクティベートするのである。
	そもそも主要コンポーネントのアクティビティとはなにか
		ユーザが何かを行うためのスクリーンを提供するアプリケーションコンポーネントである。
		MVPでいうとVIEWを指すと解釈
		アンドロイドアプリケーションは通常ユーザインターフェイスを備える複数のアクティビティを備え、それらは疎結合である。
		通常一つのアクティビティがメインに備えられ、アプリケーションを開いた際にまずそれが実行される。
		新しいアクティビティが起動されると、もとのアクティビティはバックスタックに積まれる。
		上記を踏まえ、主要コンポーネントの一つのアクティビティとは、ユーザインターフェイスを提供するコンポーネントである
	そもそも主要コンポーネントのサービスとはなにか。
		単純な説明としては、バックグラウンドで動くプログラムのこと
		アクティビティ内で音楽再生をするような仕様のアプリであると画面を切り替えたタイミングでアクティビティがPause担ってしまい、音楽が停止してしまう。
		また、画面的にも通常のアンドロイドOSの設定でバッテリーセーブのため、通常1分ぐらいで自動的にポーズとなる。
		そのため、アクティビティのライフサイクルとは別にプログラムを実行する必要がある。
		サービスを行うためには、startSevice()へIntentを渡す必要があります。
		サービスの停止には、stopService()または、サービス内でstopSelf()を呼び出す必要がある
	    サービス内のonStartCommand()で長時間実行する処理を行うとスレッドが重くなり、UI側が停止する場合がある。そのような場合にはサービス内の処理を非同期で行う必要がある
	    非同期とはなにか
	    	マルチスレッドとはなにか
	    		スレッドとは、プログラムの処理の流れ
	    		特に何もなければ、書いたコードは最初から順番に一つ人す処理されていく
	    		ローレベルのプログラミングであれば、スレッドを開始するアドレスを関数ポインタで渡して処理を開始するという流れになるが、高次の言語ではやり方が異なる
	    		Javaでは、Runnableインターフェースを実装したRunnableオブジェクトをタスクとして作成し、それをThreadオブジェクトに渡しスレッドを開始するとタスク内の処理が行われる。
	    		これによって複数のスレッド上で並列に処理を実行することが出来るようになる。
	    		上記を踏まえマルチスレッドな処理とは、複数のプログラム処理を並行して行うことである
    		時間のかかる処理をメインスレッド内のクリックイベントなどで行うと画面全体がフリーズしてしまうことがある
    		それは、メインスレッドでGUIの処理を行っているから
    		このときメインスレッドはGUIスレッドになっている
    		そのため時間のかかる処理をUIに反映させたい場合には、画面をフリーズさせないために、メインスレッドではない作業用のスレッドで行うべきである。
    		ワーカースレッド
    		ただし、ワーカースレッド内では、直接VIEWを変更するような処理を呼んではいけない
    		ワーカースレッドからGUIスレッドに処理をポストするには、Handlerオブジェクトを利用します
    		サーバソケットってなんだ
    			サーバ側のソケットのこと
    			JAVASEってなんだ
    				Javaプラットフォームの中のAPIの一つ
    				ライブラリとも取れる
    				これを実行したらこうゆう処理ができるという規約と実際の関数群
    				その中でもSEはStandardEditionで基本のAPI
				そもそもソケットとはなんだ
					ソケットとは、TCPやEUDなどの通信の終端
					TCPやUDPの通信は両端が必ずソケットで終端されている
					ソケットはコンピュータの特定のポート番号と関連付けられている
					ポート番号で識別できる
					そのため一台のホストで複数のソケットを同時に取り扱うことが可能
					アプリケーション間の通信処理はソケットに対して読み書きを行うことで実現される
					TCPとはなにか
						Transmission Control Protocol
						IP（InternetProtocol）と同じようなもの
						インターネットで通信を行うための複数のプロトコルの集まり、TCP、IPだけでなく複数で構成され、集まりをプロトコルスイートを呼ぶ
						プロトコル・スイートは階層化されている
						郵便の仕組みに例えると、利用者層、郵便局層、輸送手段層に分かれる
						上位は利用者層、下位は輸送手段そうになる
						TCP/IPの通信では、プロトコルを4つの階層に分類します
						アプリケーション層　サービス自体の構造
						トランスポート層　アプリケーション層とネットワーク層の仲介をして、利用可能なアプリケーションを識別したり、信頼可能なネットワークの識別をしたりする
						ネットワーク層　ネットワーク上のホストを識別し、ホストにデータを届ける
						ネットワークインターフェース層　隣接して接続されている装置間のデータ転送方法を定義
						TCP/IPプロトコルスイートでは、ネットワーク層以上の参加位相のプロトコルについて定義
						IPはネットワーク層のプロトコルで郵便の例で郵便局に該当する。
						IPアドレスによって、ネットワーク上のホストを識別し、データを目的のIPアドレスを持った端末に送信する。
						データはパケットと呼ばれる単位で送受信される
						ネットワーク上のホストとはなにか
							ネットワークに接続した一般用途のコンピュータシステムのこと
						TCPはトランスポート層のプロトコル
						下位層として必ずIPを利用する
						TCPの役割は信頼性の確保IPは基本的に信頼性を担保していないプロトコルである
						IPではパケットが手に届いたことを確認する手段がない
						TCPでは相手から受信確認応答を送ってもらうことにより送信したパケットが相手に届いたかどうかを確認
						TCPはコネクション型通信で、電話番号と同じように事前確率、事後のコネクション開放を行い、電話番号の代わりにポート番号で接続先を指定する
						ポート番号は更に上位のアプリケーションプロトコルを識別するために用意されている
						ポート番号とは
							ポート（port）とは、オペレーティングシステムがデータ通信を行うためのエンドポイント
							ソフトウェアにおける「ポート」は、特定のプロセスやサービスの種類によって特定される論理的な構成概念である。
							IPアドレスを建物の住所にたとえるなら、ポートは個別の部屋、ポート番号は部屋番号に相当する。
							プログラムでポートを用いて通信するには、一般にソケットと呼ばれる仕組みを用いる（ソケットはBSDで開発されたため、特にBSDソケットとも呼ぶ）。ソケットとは通信の端点のことで、2台のコンピュータが通信しているとき、その通信路の両端、すなわちそれぞれのコンピュータにソケットが存在する。また、ソケットのインターフェースやソケットを扱うライブラリプログラムも併せてソケットと呼ぶこともある。
					BSD系UNIXを起源とするAPIであり、C言語によるアプリケーション開発でのプロセス間通信、特にコンピュータネットワークに関するライブラリを構成する
					BSDソケットは、ホスト間の通信や1つのコンピュータ上のプロセス間の通信を可能とする。通信媒体としては様々な入出力機器やデバイスドライバを利用可能だが、その部分はオペレーティングシステムの実装に依存する。
					プロセス間通信とは
						BSDソケットは、ホスト間の通信や1つのコンピュータ上のプロセス間の通信を可能とする。通信媒体としては様々な入出力機器やデバイスドライバを利用可能だが、その部分はオペレーティングシステムの実装に依存する。
サービスで処理が完了したタイミングでメッセージを表示したいときなど、サービスとアクティビティとのやり取りを行いたいとき気に使う
sendBroadcastではインテントをブロードキャストする
ブロードキャストされたインテントはブロードキャストレシーバにて受け取られます

sendBroadcast(new Intent("com.robot.ACTION_FULL_SCREEN"));は単純に"com.robot.ACTION_FULL_SCREEN"というインテントをブロードキャストするという意味でしか無い
"com.robot.ACTION_FULL_SCREEN"がどこかで登録されていないと意味がない

黒いバーを消す方法
TapiaActivityが問題？
そもそも継承するActivityをアンドロイド標準にして判定
	
Activityからシステムバーを消すメソッド
decorViewというのがシステムUIかも
public static abstract @interface ViewPager.DecorView 
decorView デコビュー
ViewPagerのスタティックのインナークラスだからページクリ的な
まずはTapiaActivityかActivityかでどのように変わるかで切り分け

プレゼンタピアは有線のPCでも出来るのか
SSIDの設定ができるか

TapiaApp.hideAndroidUi(false); //trueブラックバーが表示、falseブラックバーが非表示
setImmersiveSticky();を追加






















































